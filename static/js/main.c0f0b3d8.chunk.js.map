{"version":3,"sources":["imgSources/searchicon.svg","imgSources/githublogo.png","components/GetRepos.js","imgSources/gridicon.svg","imgSources/listicon.svg","components/GetPersons.js","components/LandingPage.js","imgSources/supervisor_account.svg","components/UsersUserPage.js","components/SearchUserPage.js","App.js","reportWebVitals.js","index.js"],"names":["GetRepos","username","className","useState","error","setError","isLoaded","setIsLoaded","items","setItems","useEffect","fetch","then","res","json","result","message","Array","isArray","length","map","item","name","id","slice","GetPersons","isList","setIsList","lastSearches","user","localStorage","setItem","JSON","stringify","style","display","justifyContent","alignItems","height","document","title","onClick","alt","src","gridIcon","listIcon","href","login","avatar_url","indexOf","type","width","backgroundColor","border","LandingPage","parseInt","getItem","searchCount","setSearchCount","setUser","firstSearch","secondSearch","thirdSearch","setLastSearches","githubLogo","e","target","preventDefault","isNaN","searchIcon","onChange","value","placeholder","UserPage","person","parse","orgs","setOrgs","isRefreshed","console","log","window","location","reload","classname","documentation_url","textDecoration","marginTop","opacity","followerFollowing","followers","following","color","rel","toLowerCase","searchResult","getUsernameRepo","getUserOrgs","App","resultIndex","index","exact","path","component","UsersUserPage","SearchUserPage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"0WAAe,G,MAAA,IAA0B,wCCA1B,MAA0B,uC,YC0DxBA,MArDjB,YAA4C,IAAxBC,EAAuB,EAAvBA,SAAUC,EAAa,EAAbA,UAAa,EACbC,mBAAS,MADI,mBAChCC,EADgC,KACzBC,EADyB,OAEPF,oBAAS,GAFF,mBAEhCG,EAFgC,KAEtBC,EAFsB,OAGbJ,mBAAS,IAHI,mBAGhCK,EAHgC,KAGzBC,EAHyB,KA4BvC,OAFAC,qBAlBwB,WACtBC,MAAM,gCAAD,OAAiCV,EAAjC,WACFW,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,MAKX,SAACX,GACCG,GAAY,GACZF,EAASD,QAKU,IAEvBA,EACK,0CAAaA,EAAMY,QAAnB,IAA4B,uBAA5B,IAAkC,uBAAlC,IAAwC,0BACrCV,EAIPW,MAAMC,QAAQV,IAAUA,EAAMW,OAAS,EAEtC,sBAAMjB,UAAS,UAAKA,GAApB,SACE,qBAAIA,UAAS,UAAKA,EAAL,UAAb,cAEO,8DACJM,EAAMY,KAAI,SAAAC,GAAI,OACjB,6BACGA,EAAKC,MADCD,EAAKE,OAGTC,MAAM,EAAG,GAPd,SAYE,qCAAE,qDAAF,IAA8B,uBAA9B,IAAoC,0BAjBrC,qBAAKD,GAAG,UAAR,yBCrCE,MAA0B,qCCA1B,MAA0B,qCCwF1BE,MA3Ef,YAC2C,IADtBC,EACqB,EADrBA,OAAQC,EACa,EADbA,UACa,KAArBC,aAAqB,EAAPC,KACL1B,mBAAS,OADG,mBAC/BC,EAD+B,KACxBC,EADwB,OAENF,oBAAS,GAFH,mBAE/BG,EAF+B,KAErBC,EAFqB,OAGZJ,mBAAS,IAHG,mBAG/BK,EAH+B,KAGxBC,EAHwB,KAwBtC,GAnBAC,qBAAU,WAENC,MAAM,gCACLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACC,SAACG,GACCR,GAAY,GACZE,EAASM,GACTe,aAAaC,QAAQ,SAAUC,KAAKC,UAAUlB,OAGhD,SAACX,GACCG,GAAY,GACZF,EAASD,QAId,IAECA,EACF,OAAO,sBAAK8B,MAAO,CAACC,QAAS,OAAQC,eAAgB,SAAUC,WAAY,SAAUC,OAAO,QAArF,oBAAsGlC,EAAMY,WAC9G,GAAKV,EAGL,CAEL,GADAiC,SAASC,MAAQ,kBACdvB,MAAMC,QAAQV,GAAO,CACtB,IAAIN,EAAS,WAAiB,IAAXwB,EAAA,wBACnB,OACE,sBAAKxB,UAAS,UAAKA,EAAL,YAAd,UACE,sBAAKA,UAAS,UAAKA,EAAL,cAAd,UACE,oBAAIqB,GAAE,UAAKrB,EAAL,oBAAN,0DACA,sBAAKA,UAAWA,EAAhB,UAEE,sBAAMqB,GAAG,0BAAT,UACc,IAAXG,EACD,sBAAMe,QAAS,kBAAMd,GAAWD,IAAhC,SAAyC,qBAAKgB,IAAI,YAAYC,IAAKC,MACnE,sBAAMH,QAAS,kBAAMd,GAAWD,IAAhC,SAAyC,qBAAKgB,IAAI,YAAYC,IAAKE,QAGlErC,EAAMY,KAAI,SAAAC,GAAI,OACX,sBAAKnB,UAAS,UAAKA,EAAL,gBAAd,UACI,qBAAKwC,IAAI,SAASI,KAAI,UAAKzB,EAAK0B,OAAS7C,UAAS,UAAKA,EAAL,WAAyByC,IAAKtB,EAAK2B,aACrF,mBAAG9C,UAAS,UAAKA,EAAL,SAAuB4C,KAAI,YAAOzB,EAAK0B,OAASN,QAAS,WAEnEX,aAAaC,QAAQ,eAAgBC,KAAKC,UAAUzB,EAAMyC,QAAQ5B,MAFpE,SAGIA,EAAK0B,QACT,mBAAG7C,UAAS,UAAKA,EAAL,SAAZ,SAAoCmB,EAAK6B,OACzC,cAAC,EAAD,CAAUhD,UAAWA,EAAWD,SAAUoB,EAAK0B,QAC/C,uBARJ,IAQW,yBARsC1B,EAAKE,aAahE,wBAAQW,MAAO,CAACiB,MAAM,OAAQC,gBAAiB,UAAWC,OAAQ,UAKpE,OACA,oBAAGnD,UAAU,mBAAb,iEACsD,uBADtD,iHArCJ,OADAqC,SAASC,MAAQ,aACV,qBAAKjB,GAAG,UAAR,yBC0EE+B,EAxGK,WAAO,IAAD,EACMnD,oBAAS,GADf,mBACfuB,EADe,KACPC,EADO,OAGgBxB,mBAASoD,SAASzB,aAAa0B,QAAQ,qBAHvD,mBAGfC,EAHe,KAGFC,EAHE,OAMEvD,mBAAS,IANX,mBAMf0B,EANe,KAMT8B,EANS,OAOkBxD,mBAAS,CAC7CyD,YAAa,KACbC,aAAc,KACdC,YAAa,OAVK,mBAOflC,EAPe,KAODmC,EAPC,KA6DtB,OANArD,qBAAU,WACN,OAAO,eAGR,IAGC,gCACI,sBAAKa,GAAG,SAAR,UACI,oBAAGuB,KAAK,KAAR,UAAa,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAU,gBAA/D,OAEA,uBAAMA,UAAU,SAAhB,cACI,mBAAG4C,KAAI,YAAOhB,aAAa0B,QAAQ,iBAAnC,SACI,qBAAKd,IAAI,cAAcD,QAjDlB,SAAAwB,GACK,WAAvBA,EAAEC,OAAOhE,WACR+D,EAAEE,iBAGNrC,aAAaC,QAAQ,eAAgBF,GAEjB,IAAhB4B,GAAqC,IAAhBA,GAAqBW,MAAMX,IAChDM,EAAgB,2BAAInC,GAAL,IAAmBgC,YAAa/B,KAE/CC,aAAaC,QAAQ,cAAeF,GAEpCC,aAAaC,QAAQ,kBAAmB,KACxC2B,EAAeH,SAASzB,aAAa0B,QAAQ,sBAExB,MAAhBC,GAAuC,IAAhBA,GAC5BM,EAAgB,2BAAInC,GAAL,IAAmBiC,aAAchC,KAEhDC,aAAaC,QAAQ,eAAgBF,GAErCC,aAAaC,QAAQ,kBAAmB,KACxC2B,EAAeH,SAASzB,aAAa0B,QAAQ,sBAExB,MAAhBC,GAAuC,IAAhBA,IAC5BM,EAAgB,2BAAInC,GAAL,IAAmBkC,YAAajC,KAE/CC,aAAaC,QAAQ,cAAeF,GAEpCC,aAAaC,QAAQ,kBAAmB,KACxC2B,EAAeH,SAASzB,aAAa0B,QAAQ,sBAIjDG,EAAQ,KAgB0DhB,IAAK0B,EAAYnE,UAAU,kBAK7E,uBACIoE,SA5DD,SAAAL,GACnBN,EAAQM,EAAEC,OAAOK,OACjBzC,aAAaC,QAAQ,cAAekC,EAAEC,OAAOK,QA2DzBA,MAAO1C,EACPqB,KAAK,OACLsB,YAAY,kBACZtE,UAAU,kBAf1B,IAsBI,uBAAMA,UAAU,gBAAhB,8BACqB,uBAChB4B,aAAa0B,QAAQ,eAF1B,IAE2C,IACtC1B,aAAa0B,QAAQ,gBAH1B,IAG4C,IACvC1B,aAAa0B,QAAQ,qBAK9B,cAAC,EAAD,CACI5B,aAAcA,EACdD,UAAWA,EACXD,OAAQA,EACRG,KAAMA,QC9GP,MAA0B,+C,YCQ1B,SAAS4C,IAEpB,IAGIC,EAHS1C,KAAK2C,MAAM7C,aAAa0B,QAAQ,WACjC1B,aAAa0B,QAAQ,iBAENT,MALI,EAQL5C,mBAAS,MARJ,mBAQxBC,EARwB,KAQjBC,EARiB,OASCF,oBAAS,GATV,mBASxBG,EATwB,KASdC,EATc,OAUPJ,mBAAS,IAVF,mBAUxBkB,EAVwB,KAUlBU,EAVkB,OAYP5B,mBAAS,IAZF,mBAYxByE,EAZwB,KAYlBC,EAZkB,KAkD/BnE,qBAAU,WAEN,OApCAC,MAAM,gCAAD,OADc+D,IAEd9D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGR,GAAY,GACZwB,EAAQhB,MAKZ,SAACX,GACGG,GAAY,GACZF,EAASD,MAwBd,eAIR,IAEHM,qBAAU,WAEN,OAzBAC,MAAM,gCAAD,OADc+D,EACd,UACA9D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG8D,EAAQ9D,MAKZ,SAACX,GACGC,EAASD,MAed,eAIR,IAEHM,qBAAU,WACN,IAAIoE,EAAchD,aAAa0B,QAAQ,eAQvC,OAPAuB,QAAQC,WAAWF,GACA,SAAhBA,IACCC,QAAQC,IAAI,WACZC,OAAOC,SAASC,QAAO,GACvBrD,aAAaC,QAAQ,cAAe,SAGjC,eAGR,IAEH,IAAIqD,EAAY,cAGhB,OADC7C,SAASC,MAAT,UAAoBnB,EAAK0B,MAAzB,aAAmC1B,EAAKC,KAAxC,KACEL,MAAMC,QAAQ0D,GAET,qBAAK1E,UAAS,UAAKkF,EAAL,SAAd,SAEgC,mDAA3B/D,EAAKgE,kBACF,oBAAGnF,UAAU,mBAAb,8GAGI,qBAAKqB,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,KAAR,UAAa,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA9D,YAGR,gCAMI,qBAAK7D,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,KAAR,UAAa,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA9D,SAGJ,iCAEI,oBAAI7D,GAAG,YAAP,SAAoBF,EAAKC,OACzB,mBAAGY,MAAO,CACNoD,eAAgB,QACjBxC,KAAI,6BAAwBzB,EAAK0B,OAFpC,SAGI,oBAAIxB,GAAE,UAAK6D,EAAL,UAAN,mBAAkC/D,EAAK0B,WAI3C,mBAAGb,MAAO,CACNqD,UAAW,MACXC,QAAS,OAFb,SAGInE,EAAK6B,OAET,uBAEA,qBAAKR,IAAI,SAASC,IAAKtB,EAAK2B,WAAYzB,GAAE,UAAK6D,EAAL,UAE1C,uBAEA,oBAAG7D,GAAE,UAAK6D,EAAL,uBAAL,UACI,qBAAK7D,GAAG,yBAAyBoB,IAAK8C,EAAmB/C,IAAI,uBADjE,cAEgBrB,EAAKqE,UAFrB,IAEiC,IAFjC,eAEkDrE,EAAKsE,aAGvD,uBAEA,cAAC,EAAD,CAAUzF,UAAS,UAAKkF,GAAanF,SAAUyE,IAG/C,uBACIzD,MAAMC,QAAQ0D,IAAyB,IAAhBA,EAAKzD,OAC5B,uBAAMI,GAAG,wBAAT,UACA,4BAAG,sDAGKqD,EAAKxD,KAAI,SAAAC,GAEL,OAAO,sBAAKnB,UAAS,mBAAd,UACK,qBAAKsC,MAAK,UAAKnB,EAAK0B,OAASL,IAAI,mBAAmBxC,UAAS,mBAAsByC,IAAKtB,EAAK2B,aAC7F,mBAAGd,MAAO,CACNoD,eAAgB,OAChBM,MAAO,SACR9C,KAAI,6BAAwBzB,EAAK0B,OAASmB,OAAO,SAAS2B,IAAI,aAHjE,SAII,sBAAMtE,GAAG,qBAAT,SAA+BF,EAAK0B,gBAK5D,0BAEN,gCAAM1B,EAAKC,KAAOD,EAAKC,KAAKwE,cAAgB,OAA5C,2CAIL1F,EAAQ,0CAAaA,EAAMY,WAAkBV,EAAgD,KAArC,qBAAKiB,GAAG,UAAR,6BAQrE,qBAAKrB,UAAS,UAAKkF,EAAL,SAAd,SAEgC,mDAA3B/D,EAAKgE,kBAEF,gCACI,qBAAK9D,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,IAAR,UAAY,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA7D,SAEJ,mBAAGlF,UAAU,mBAAb,iEAJJ,OAQA,gCAMI,qBAAKqB,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,IAAR,UAAY,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA7D,SAGHhF,EAAQ,0CAAaA,EAAMY,WAAkBV,EAAgD,KAArC,qBAAKiB,GAAG,UAAR,6BC5LlE,SAASkD,IAAY,IAAD,EACLtE,mBAAS,MADJ,mBACxBC,EADwB,KACjBC,EADiB,OAECF,oBAAS,GAFV,mBAExBG,EAFwB,KAEdC,EAFc,OAGPJ,mBAAS,IAHF,mBAGxBkB,EAHwB,KAGlBU,EAHkB,OAKP5B,mBAAS,IALF,mBAKxByE,EALwB,KAKlBC,EALkB,KA2C/BnE,qBAAU,WAEN,OAtCoB,WACpB,IAAIqF,EAAejE,aAAa0B,QAAQ,gBACxC7C,MAAM,gCAAD,OAAiCoF,IACjCnF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGR,GAAY,GACZwB,EAAQhB,MAKZ,SAACX,GACGG,GAAY,GACZF,EAASD,MAuBrB4F,GACO,eAGR,IAEHtF,qBAAU,WAEN,OA1BgB,WAChB,IAAIqF,EAAejE,aAAa0B,QAAQ,gBACxC7C,MAAM,gCAAD,OAAiCoF,EAAjC,UACAnF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG8D,EAAQ9D,MAKZ,SAACX,GACGC,EAASD,MAarB6F,GACO,eAGR,IAEH,IAAIb,EAAY,cAGhB,OADC7C,SAASC,MAAT,UAAoBnB,EAAK0B,MAAzB,aAAmC1B,EAAKC,KAAxC,KACEL,MAAMC,QAAQ0D,GAET,qBAAK1E,UAAS,UAAKkF,EAAL,SAAd,SAEgC,mDAA3B/D,EAAKgE,kBACF,oBAAGnF,UAAU,mBAAb,gEAEA,mBAAG4C,KAAK,KAAR,SAAa,uDAEb,gCAMI,qBAAKvB,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,KAAR,UAAa,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA9D,SAGJ,iCAEI,oBAAI7D,GAAG,YAAP,SAAoBF,EAAKC,OACzB,mBAAGY,MAAO,CACNoD,eAAgB,QACjBxC,KAAI,6BAAwBzB,EAAK0B,OAFpC,SAGI,oBAAIxB,GAAE,UAAK6D,EAAL,UAAN,mBAAkC/D,EAAK0B,WAI3C,mBAAGb,MAAO,CACNqD,UAAW,MACXC,QAAS,OAFb,SAGInE,EAAK6B,OAET,uBAEA,qBAAKR,IAAI,SAASC,IAAKtB,EAAK2B,WAAYzB,GAAE,UAAK6D,EAAL,UAE1C,uBAEA,oBAAG7D,GAAE,UAAK6D,EAAL,uBAAL,UACI,qBAAK7D,GAAG,yBAAyBoB,IAAK8C,EAAmB/C,IAAI,uBADjE,cAEgBrB,EAAKqE,UAFrB,IAEiC,IAFjC,eAEkDrE,EAAKsE,aAGvD,uBAEA,cAAC,EAAD,CAAUzF,UAAS,UAAKkF,GAAanF,SAAU6B,aAAa0B,QAAQ,kBAGpE,uBACIvC,MAAMC,QAAQ0D,IAAyB,IAAhBA,EAAKzD,OAC5B,uBAAMI,GAAG,uBAAT,UAEQqD,EAAKxD,KAAI,SAAAC,GAEL,OAAO,sBAAKnB,UAAS,mBAAd,2BAEK,qBAAKsC,MAAK,UAAKnB,EAAK0B,OAASL,IAAI,mBAAmBxC,UAAS,mBAAsByC,IAAKtB,EAAK2B,aAC7F,mBAAGd,MAAO,CACNoD,eAAgB,OAChBM,MAAO,SACR9C,KAAI,6BAAwBzB,EAAK0B,OAASmB,OAAO,SAAS2B,IAAI,aAHjE,SAII,sBAAMtE,GAAG,qBAAT,SAA+BF,EAAK0B,gBAM5D,0BAEN,gCAAM1B,EAAKC,KAAOD,EAAKC,KAAKwE,cAAgB,OAA5C,2CAIL1F,EAAQ,0CAAaA,EAAMY,WAAkBV,EAAgD,KAArC,qBAAKiB,GAAG,UAAR,6BAQrE,qBAAKrB,UAAS,UAAKkF,EAAL,SAAd,SAEgC,mDAA3B/D,EAAKgE,kBACF,oBAAGnF,UAAU,mBAAb,gEAEA,mBAAG4C,KAAI,KAAP,SAAe,uDAEf,gCAMI,qBAAKvB,GAAE,UAAK6D,EAAL,WAAP,SACI,oBAAGtC,KAAK,KAAR,UAAa,qBAAKJ,IAAI,cAAcC,IAAKqB,EAAY9D,UAAS,UAAKkF,EAAL,WAA9D,SAIJ,oBAAIlD,MAAO,CACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,OAAQ,QAJZ,2BASClC,EAAQ,0CAAaA,EAAMY,WAAkBV,EAAgD,KAArC,qBAAKiB,GAAG,UAAR,6BChJlE2E,MAzBf,WACE,IAGIC,EAHApF,EAASiB,KAAK2C,MAAM7C,aAAa0B,QAAQ,WACzC4C,EAAQtE,aAAa0B,QAAQ,gBAcjC,OAXc,OAAXzC,GAA6B,OAAVqF,GAA+C,mDAA7BrF,EAAOsE,mBAC3Cc,EAAc,GACdC,EAAQ,GAEVD,EAAcpF,EAAOqF,GAQrB,eAAC,IAAD,WACI,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWjD,IACjC,cAAC,IAAD,CAAO+C,OAAK,EAACC,KAAI,WAAMH,EAAYpD,QAAUjB,aAAa0B,QAAQ,gBAAkB,KAAO2C,EAAYpD,OAASwD,UAAWC,IAC3H,cAAC,IAAD,CAAOH,OAAK,EAACC,KAAI,WAAMxE,aAAa0B,QAAQ,iBAAmB+C,UAAWJ,EAAYpD,QAAUjB,aAAa0B,QAAQ,gBAAkBgD,EAAgBC,QCpBhJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhG,MAAK,YAAkD,IAA/CiG,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEF7E,SAAS8E,eAAe,SAM1BX,M","file":"static/js/main.c0f0b3d8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/searchicon.bc2178ae.svg\";","export default __webpack_public_path__ + \"static/media/githublogo.5eab40a0.png\";","import React, {useState, useEffect} from 'react'\r\n\r\nimport '../styles/person-gridStyle.css'\r\nimport '../styles/person-listStyle.css'\r\n\r\nfunction GetRepos({ username, className }) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]);\r\n  \r\n    // Note: the empty deps array [] means\r\n    // this useEffect will run once\r\n    // similar to componentDidMount()\r\n    const getUsernameRepo = () => {\r\n      fetch(`https://api.github.com/users/${username}/repos`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            setIsLoaded(true);\r\n            setError(error);\r\n          }\r\n        )\r\n      }\r\n    // eslint-disable-next-line\r\n    useEffect(getUsernameRepo, []);\r\n\r\n    if (error) {\r\n      return <div>Error: {error.message} <br/> <br/> <br/></div>;\r\n    } else if (!isLoaded) {\r\n\r\n      return <div id=\"loading\">Loading...</div>\r\n    } else {\r\n      if(Array.isArray(items) && items.length > 0){ // If Items (repos) Is Array then return repos\r\n        return (\r\n          <span className={`${className}`} > \r\n            <ul className={`${className}-repos`}>\r\n              {/* Repos: */}\r\n              {` `}<strong>First three repository: </strong>\r\n              {items.map(item => (\r\n            <li key={item.id}>\r\n              {item.name}\r\n            </li> \r\n              )).slice(0, 3)} {/* Map Over User Repos Data And return First Three Repo */}\r\n            </ul>\r\n          </span>\r\n        );\r\n      }\r\n      return (<><p>No repository found.</p> <br/> <br/></>)\r\n    }\r\n  }\r\n\r\n  export default GetRepos","export default __webpack_public_path__ + \"static/media/gridicon.1afda891.svg\";","export default __webpack_public_path__ + \"static/media/listicon.c2d3dbb9.svg\";","import React, {useState, useEffect} from 'react'\r\n/* Import Components */\r\nimport GetRepos from './GetRepos.js'\r\n/* Import Components */\r\n\r\n\r\nimport '../styles/person-gridStyle.css'\r\nimport '../styles/person-listStyle.css'\r\n// Import Icons\r\nimport gridIcon from '../imgSources/gridicon.svg'\r\nimport listIcon from '../imgSources/listicon.svg'\r\n// Import Icons\r\n\r\nfunction GetPersons({isList, setIsList,\r\n                     lastSearches, user}) {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [items, setItems] = useState([]); \r\n\r\n    useEffect(() => {\r\n      // setTimeout(() => {\r\n        fetch(`https://api.github.com/users`)\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            setIsLoaded(true);\r\n            setItems(result);\r\n            localStorage.setItem('result', JSON.stringify(result))\r\n          },\r\n\r\n          (error) => {\r\n            setIsLoaded(true)\r\n            setError(error)\r\n          }\r\n        )\r\n      // }, 1500)\r\n    }, [])\r\n\r\n    if (error) {\r\n      return <div style={{display: 'flex', justifyContent: 'center', alignItems: 'center', height:'80vh'}}>Error: {error.message}</div>;\r\n    } else if (!isLoaded) {\r\n      document.title = 'Loading...'\r\n      return <div id=\"loading\">Loading...</div>;\r\n    } else {\r\n      document.title = 'Github Profiles'\r\n      if(Array.isArray(items)){\r\n        let className = `${isList === true ? `person` : `person-grid`}` \r\n        return (\r\n          <div className={`${className}-wrapper`}>\r\n            <div className={`${className}-container`}>\r\n              <h2 id={`${className}-list-of-persons`}>The Most popular users according to GitHub: </h2>\r\n              <div className={className}>\r\n                {/* List/Grid Switcher */}\r\n                <span id=\"grid-list-grid-switcher\">\r\n                  {isList === true \r\n                ? <span onClick={() => setIsList(!isList)}><img alt=\"Grid Icon\" src={gridIcon}/></span> \r\n                : <span onClick={() => setIsList(!isList)}><img alt=\"List Icon\" src={listIcon} /></span>} \r\n                </span>\r\n                {/* List/Grid Switcher */}\r\n                  {items.map(item => (\r\n                      <div className={`${className}-each-person`} key={item.id}>\r\n                          <img alt=\"Avatar\" href={`${item.login}`} className={`${className}-avatar`} src={item.avatar_url} />\r\n                          <a className={`${className}-name`} href={`#/${item.login}`} onClick={() => {\r\n                            // localStorage.setItem('aseiyosaxla', JSON.stringify(item))\r\n                            localStorage.setItem('person-index', JSON.stringify(items.indexOf(item)))\r\n                          }}>{item.login}</a> \r\n                          <p className={`${className}-type`}>{item.type}</p> \r\n                          <GetRepos className={className} username={item.login}/>\r\n                          <br /> <br />\r\n                      </div>\r\n                  ))} \r\n              </div>\r\n            </div>\r\n            <button style={{width:'100%', backgroundColor: '#2b3337', border: '0'}}></button>\r\n          </div>\r\n        );\r\n      } \r\n        else { \r\n          return (\r\n          <p className=\"no-info-avaiable\">\r\n            There Is Problem Retrieving Data From GitHub API... <br />\r\n            Estimated Error: `Failed to load resource: \r\n            the server responded with a status of 403 (rate limit exceeded)`\r\n           </p>)\r\n        } \r\n    }\r\n}\r\n\r\nexport default GetPersons","import React, { useState, useEffect } from 'react'\r\n\r\nimport '../styles/Header.css'\r\n\r\n\r\n// Import Icons\r\nimport searchIcon from '../imgSources/searchicon.svg'\r\nimport githubLogo from '../imgSources/githublogo.png'\r\n// Import Icons\r\n\r\nimport GetPersons from './GetPersons'\r\n\r\nconst LandingPage = () => {\r\n    const [isList, setIsList] = useState(true)\r\n    \r\n    const [searchCount, setSearchCount] = useState(parseInt(localStorage.getItem('numLastSearched'))) \r\n\r\n    // search input\r\n    const [user, setUser] = useState('')\r\n    const [lastSearches, setLastSearches] = useState({ // Optional (not used anywhere)\r\n        firstSearch: null,\r\n        secondSearch: null,\r\n        thirdSearch: null\r\n    }) // Optional (not used anywhere)\r\n    // search input\r\n\r\n    const searchFunction = e => {\r\n        setUser(e.target.value)\r\n        localStorage.setItem('searchInput', e.target.value)\r\n    }\r\n\r\n    const searchSubmitFunc = e => {\r\n        if(e.target.className === 'search') {\r\n            e.preventDefault()\r\n        }\r\n\r\n        localStorage.setItem('searchResult', user)\r\n\r\n        if (searchCount === 0 || searchCount === 1 || isNaN(searchCount)) {\r\n            setLastSearches({...lastSearches, firstSearch: user}) // Optional (not used anywhere)\r\n\r\n            localStorage.setItem('firstSearch', user)\r\n\r\n            localStorage.setItem('numLastSearched', '2')\r\n            setSearchCount(parseInt(localStorage.getItem('numLastSearched')))\r\n\r\n        }else if(searchCount === '2' || searchCount === 2) {\r\n            setLastSearches({...lastSearches, secondSearch: user}) // Optional (not used anywhere)\r\n\r\n            localStorage.setItem('secondSearch', user)\r\n\r\n            localStorage.setItem('numLastSearched', '3')\r\n            setSearchCount(parseInt(localStorage.getItem('numLastSearched')))\r\n\r\n        }else if(searchCount === '3' || searchCount === 3){\r\n            setLastSearches({...lastSearches, thirdSearch: user}) // Optional (not used anywhere)\r\n\r\n            localStorage.setItem('thirdSearch', user)\r\n\r\n            localStorage.setItem('numLastSearched', '1')\r\n            setSearchCount(parseInt(localStorage.getItem('numLastSearched')))\r\n\r\n        }\r\n\r\n        setUser('')\r\n    }\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            //cleanup\r\n        }\r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div id=\"header\">\r\n                <a href=\"#/\"><img alt=\"github logo\" src={githubLogo} className=\"github-logo\"/> </a>\r\n                \r\n                <span className=\"search\"> {/* Search Input */}\r\n                    <a href={`#/${localStorage.getItem('searchResult')}`}>\r\n                        <img alt=\"search icon\" onClick={searchSubmitFunc} src={searchIcon} className=\"search-icon\"/>\r\n                    </a>\r\n \r\n                    {/* <a href={`${localStorage.getItem('searchResult')}`}> */}\r\n                        {/* <form onSubmit={searchSubmitFunc}> */}\r\n                        <input\r\n                            onChange={searchFunction} \r\n                            value={user} \r\n                            type=\"text\" \r\n                            placeholder=\"Search for user\" \r\n                            className=\"search-box\"\r\n                        />\r\n                    {/* </form> */}\r\n                    {/* </a> */}\r\n                    \r\n                </span> {/* Search Input */}\r\n\r\n                <span className=\"last-searches\">\r\n                    Latest Searches: <br />\r\n                    {localStorage.getItem('firstSearch')} {' '}\r\n                    {localStorage.getItem('secondSearch')} {' '}\r\n                    {localStorage.getItem('thirdSearch')} \r\n                </span>\r\n                \r\n            </div>\r\n\r\n            <GetPersons \r\n                lastSearches={lastSearches} \r\n                setIsList={setIsList} \r\n                isList={isList}\r\n                user={user}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LandingPage","export default __webpack_public_path__ + \"static/media/supervisor_account.6a1bce44.svg\";","import React, {useEffect, useState} from 'react'\r\nimport GetRepos from './GetRepos'\r\n\r\nimport followerFollowing from '../imgSources/supervisor_account.svg'\r\nimport githubLogo from '../imgSources/githublogo.png'\r\n\r\nimport '../styles/SearchUserPage.css'\r\nimport '../styles/UsersUserPage.css'\r\nexport default function UserPage() {\r\n    /* Getting Info Of Users (only that 30) */ \r\n    let result = JSON.parse(localStorage.getItem('result'))\r\n    let index = localStorage.getItem('person-index')\r\n\r\n    let person = result[index].login\r\n    /* Getting Info Of Users (only that 30) */\r\n    \r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n\r\n    const [orgs, setOrgs] = useState([]);\r\n\r\n    const getUsernameRepo = () => {\r\n        let searchResult = person\r\n        fetch(`https://api.github.com/users/${searchResult}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItem(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    const getUserOrgs = () => {\r\n        let searchResult = person\r\n        fetch(`https://api.github.com/users/${searchResult}/orgs`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setOrgs(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsernameRepo()\r\n        return () => {\r\n            // cleanup\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getUserOrgs()\r\n        return () => {\r\n            // cleanup\r\n        }\r\n        //eslint-disable-next-line\r\n    }, [])\r\n    \r\n    useEffect(() => {\r\n        let isRefreshed = localStorage.getItem('isRefreshed')\r\n        console.log(typeof isRefreshed)\r\n        if(isRefreshed === 'null'){\r\n            console.log('reload?')\r\n            window.location.reload(true)\r\n            localStorage.setItem('isRefreshed', 'true')\r\n        }\r\n\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [])\r\n\r\n    let classname = 'search-user' \r\n    // eslint-disable-next-line\r\n    {document.title = `${item.login} (${item.name})`}\r\n    if(Array.isArray(orgs)) {\r\n        return (   \r\n            <div className={`${classname}-page`}>\r\n                {/* rate limit error handling */}\r\n                {item.documentation_url === 'https://developer.github.com/v3/#rate-limiting' ? (\r\n                    <p className=\"no-info-avaiable\">\r\n                        Error: `Failed to load resource: \r\n                        the server responded with a status of 403 (rate limit exceeded)`\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"#/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n                    </p>) :\r\n                    <div>\r\n                        {/* back link to landing page */}\r\n                        {/* <a href={`/`}><button>Landing Page</button></a> */}\r\n                    \r\n\r\n\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"#/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n\r\n                        <span>\r\n                            {/* full name & username */}\r\n                            <h1 id=\"full-name\">{item.name}</h1>\r\n                            <a style={{\r\n                                textDecoration: 'none'\r\n                            }} href={`https://github.com/${item.login}`}>\r\n                                <h3 id={`${classname}-login`}>{`${item.login}`}</h3>\r\n                            </a>\r\n\r\n                            {/* type */}\r\n                            <p style={{\r\n                                marginTop: '5px',\r\n                                opacity: '0.9'    \r\n                            }}>{item.type}</p>\r\n\r\n                            <br />\r\n                            {/* avatar */}\r\n                            <img alt=\"Avatar\" src={item.avatar_url} id={`${classname}-img`}/>\r\n                            \r\n                            <br/>\r\n                            {/* follower follwing */}\r\n                            <p id={`${classname}-follower-following`}>\r\n                                <img id=\"follower-following-img\" src={followerFollowing} alt=\"supervisor_account\" />\r\n                                Followers: {item.followers} {' '} Following: {item.following}\r\n                            </p>\r\n                            \r\n                            <br />\r\n                            {/* repos */}\r\n                            <GetRepos className={`${classname}`} username={person} />\r\n\r\n                            {/* organizations */}\r\n                            <br />\r\n                            {   Array.isArray(orgs) && orgs.length !== 0 \r\n                            ?   <span id=\"organization-selector\">\r\n                                <p><strong>Organizations:</strong></p>\r\n                                    {/* <h4 className='organizations'>organizations {item.name ? item.name.toLowerCase() : 'user'} belongs:</h4> */}\r\n                                    {\r\n                                        orgs.map(item => {\r\n                                            //eslint-disable-next-line\r\n                                            return <div className={`organisation-img`}>\r\n                                                        <img title={`${item.login}`} alt=\"organisation-img\" className={`organisation-img`} src={item.avatar_url} />\r\n                                                        <a style={{\r\n                                                            textDecoration: 'none',\r\n                                                            color: 'white'\r\n                                                        }} href={`https://github.com/${item.login}`} target=\"_blank\" rel=\"noreferrer\">\r\n                                                            <span id=\"organisation-login\">{item.login}</span>\r\n                                                        </a>\r\n                                                    </div>\r\n                                        })\r\n                                    }                         \r\n                                    <br/>   \r\n                                </span>\r\n                            : <div>{item.name ? item.name.toLowerCase() : 'User'} is not belong to any organization</div>} \r\n\r\n                        </span>\r\n\r\n                        {error ? <div>Error: {error.message}</div> : !isLoaded ? <div id=\"loading\">Loading...</div> : null}\r\n                    </div>}\r\n                {/* rate limit error handling */}\r\n            </div>\r\n        )\r\n    } // if Array.isArray(orgs) end\r\n    else {\r\n        return (\r\n            <div className={`${classname}-page`}>\r\n                {/* rate limit error handling */}\r\n                {item.documentation_url === 'https://developer.github.com/v3/#rate-limiting' ? (\r\n                    \r\n                    <div>\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n                        <p className=\"no-info-avaiable\">\r\n                        There Is Problem Retrieving Data From GitHub API...\r\n                    </p> </div>) :\r\n                    \r\n                    <div>\r\n                        {/* back link to landing page */}\r\n                        {/* <a href={`/`}><button>Landing Page</button></a> */}\r\n                    \r\n\r\n\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n\r\n                        {error ? <div>Error: {error.message}</div> : !isLoaded ? <div id=\"loading\">Loading...</div> : null}\r\n                    </div>}\r\n                {/* rate limit error handling */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\n\r\nimport GetRepos from './GetRepos'\r\n\r\nimport githubLogo from '../imgSources/githublogo.png'\r\n\r\nimport '../styles/SearchUserPage.css'\r\nimport '../styles/UsersUserPage.css'\r\n\r\nimport followerFollowing from '../imgSources/supervisor_account.svg'\r\n\r\nexport default function UserPage() {\r\n    const [error, setError] = useState(null);\r\n    const [isLoaded, setIsLoaded] = useState(false);\r\n    const [item, setItem] = useState([]);\r\n\r\n    const [orgs, setOrgs] = useState([]);\r\n\r\n    const getUsernameRepo = () => {\r\n        let searchResult = localStorage.getItem('searchResult')\r\n        fetch(`https://api.github.com/users/${searchResult}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setIsLoaded(true);\r\n                    setItem(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setIsLoaded(true);\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    const getUserOrgs = () => {\r\n        let searchResult = localStorage.getItem('searchResult')\r\n        fetch(`https://api.github.com/users/${searchResult}/orgs`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    setOrgs(result);\r\n                },\r\n                // Note: it's important to handle errors here\r\n                // instead of a catch() block so that we don't swallow\r\n                // exceptions from actual bugs in components.\r\n                (error) => {\r\n                    setError(error);\r\n                }\r\n            )\r\n    }\r\n\r\n    useEffect(() => {\r\n        getUsernameRepo()\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        getUserOrgs()\r\n        return () => {\r\n            // cleanup\r\n        }\r\n    }, [])\r\n\r\n    let classname = 'search-user' \r\n    // eslint-disable-next-line\r\n    {document.title = `${item.login} (${item.name})`}\r\n    if(Array.isArray(orgs)) {\r\n        return (\r\n            <div className={`${classname}-page`}>\r\n                {/* rate limit error handling */}\r\n                {item.documentation_url === 'https://developer.github.com/v3/#rate-limiting' ? (\r\n                    <p className=\"no-info-avaiable\">\r\n                        There Is Problem Retrieving Data From GitHub API...\r\n                    <a href=\"#/\"><button>Landing Page</button></a>\r\n                    </p>) :\r\n                    <div>\r\n                        {/* back link to landing page */}\r\n                        {/* <a href={`/`}><button>Landing Page</button></a> */}\r\n                    \r\n\r\n\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"#/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n\r\n                        <span>\r\n                            {/* full name & username */}\r\n                            <h1 id=\"full-name\">{item.name}</h1>\r\n                            <a style={{\r\n                                textDecoration: 'none'\r\n                            }} href={`https://github.com/${item.login}`}>\r\n                                <h3 id={`${classname}-login`}>{`${item.login}`}</h3>\r\n                            </a>\r\n\r\n                            {/* type */}\r\n                            <p style={{\r\n                                marginTop: '5px',\r\n                                opacity: '0.9'    \r\n                            }}>{item.type}</p>\r\n\r\n                            <br />\r\n                            {/* avatar */}\r\n                            <img alt=\"Avatar\" src={item.avatar_url} id={`${classname}-img`}/>\r\n                            \r\n                            <br/>\r\n                            {/* follower follwing */}\r\n                            <p id={`${classname}-follower-following`}>\r\n                                <img id=\"follower-following-img\" src={followerFollowing} alt=\"supervisor_account\" />\r\n                                Followers: {item.followers} {' '} Following: {item.following}\r\n                            </p>\r\n                            \r\n                            <br />\r\n                            {/* repos */}\r\n                            <GetRepos className={`${classname}`} username={localStorage.getItem('searchResult')} />\r\n\r\n                            {/* organizations */}\r\n                            <br />\r\n                            {   Array.isArray(orgs) && orgs.length !== 0 \r\n                            ?   <span id=\"oranization-selector\">\r\n                                    {\r\n                                        orgs.map(item => {\r\n                                            //eslint-disable-next-line\r\n                                            return <div className={`organisation-img`}>\r\n                                                        Organizations:\r\n                                                        <img title={`${item.login}`} alt=\"organisation-img\" className={`organisation-img`} src={item.avatar_url} />\r\n                                                        <a style={{\r\n                                                            textDecoration: 'none',\r\n                                                            color: 'white'\r\n                                                        }} href={`https://github.com/${item.login}`} target=\"_blank\" rel=\"noreferrer\">\r\n                                                            <span id=\"organisation-login\">{item.login}</span>\r\n                                                        </a>\r\n                                                        \r\n                                                    </div>\r\n                                        })\r\n                                    }                         \r\n                                    <br/>  \r\n                                </span>\r\n                            : <div>{item.name ? item.name.toLowerCase() : 'User'} is not belong to any organization</div>} \r\n\r\n                        </span>\r\n\r\n                        {error ? <div>Error: {error.message}</div> : !isLoaded ? <div id=\"loading\">Loading...</div> : null}\r\n                    </div>}\r\n                {/* rate limit error handling */}\r\n            </div>\r\n        )\r\n    } // if Array.isArray(orgs) end\r\n    else {\r\n        return (\r\n            <div className={`${classname}-page`}>\r\n                {/* rate limit error handling */}\r\n                {item.documentation_url === 'https://developer.github.com/v3/#rate-limiting' ? (\r\n                    <p className=\"no-info-avaiable\">\r\n                        There Is Problem Retrieving Data From GitHub API...\r\n                    <a href={`#/`}><button>Landing Page</button></a>\r\n                    </p>) :\r\n                    <div>\r\n                        {/* back link to landing page */}\r\n                        {/* <a href={`/`}><button>Landing Page</button></a> */}\r\n                    \r\n\r\n\r\n                        <div id={`${classname}-header`}>\r\n                            <a href=\"#/\"><img alt=\"github-logo\" src={githubLogo} className={`${classname}-logo`}/> </a>\r\n                        </div>\r\n                        \r\n                        {/* Not Found */}\r\n                        <h1 style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'center',\r\n                            alignItems: 'center',\r\n                            height: '75vh'\r\n                        }}>\r\n                            **Not Found**\r\n                        </h1>\r\n\r\n                        {error ? <div>Error: {error.message}</div> : !isLoaded ? <div id=\"loading\">Loading...</div> : null}\r\n                    </div>}\r\n                {/* rate limit error handling */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react'\nimport './App.css';\n\nimport { HashRouter, Route } from 'react-router-dom'\n\n/* Import Components */\nimport LandingPage from './components/LandingPage'\nimport UsersUserPage from './components/UsersUserPage'\n// eslint-disable-next-line\nimport SearchUserPage from './components/SearchUserPage'\n/* Import Components */\n\nfunction App() {\n  let result = JSON.parse(localStorage.getItem('result'))\n  let index = localStorage.getItem('person-index')\n\n  let resultIndex;\n  if(result === null || index === null || result.documentation_url === \"https://developer.github.com/v3/#rate-limiting\") {\n      resultIndex = ''\n      index = 0\n  }else {\n    resultIndex = result[index]\n  }\n  // let resultIndex = result[index] === null ? '/error' : result[index]\n\n  // console.log(resultIndex.login === undefined)\n  // console.log(localStorage.getItem('searchResult'), 'eg ari jigaro')\n\n  return (\n    <HashRouter>\n        <Route exact path='/' component={LandingPage} />\n        <Route exact path={`/${resultIndex.login === localStorage.getItem('searchResult') ? null : resultIndex.login}`} component={UsersUserPage}/>\n        <Route exact path={`/${localStorage.getItem('searchResult')}`} component={resultIndex.login === localStorage.getItem('searchResult') ? UsersUserPage : SearchUserPage} />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}